import axios from "axios";
import { GetServerSideProps, GetStaticProps, NextPage } from "next";
import Head from "next/head";
import { HomePageProps } from "../types";

const HomePage = ({ eventsList = [] }: HomePageProps) => {
	return (
		<div>
			<Head>
				<title>Create Next App</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<pre>{JSON.stringify(eventsList, null, 2)}</pre>
		</div>
	);
};

export const getStaticProps: GetStaticProps = async () => {
	try {
		const {
			data: { data },
		} = await axios({
			method: "GET",
			url: "http://localhost:3000/api/events",
		});

		return {
			props: { eventsList: data },
		};
	} catch (error) {
		// check if the error was thrown from axios
		if (axios.isAxiosError(error)) {
			if (error.response) {
				// The request was made and the server responded with a status code
				// that falls out of the range of 2xx
				console.log(
					"ðŸš€ ~ file: index.tsx ~ line 37 ~ constgetStaticProps:GetStaticProps= ~ error.response",
					error.response.data
				);
				console.log(
					"ðŸš€ ~ file: index.tsx ~ line 38 ~ constgetStaticProps:GetStaticProps= ~ error.response",
					error.response.status
				);
				console.log(
					"ðŸš€ ~ file: index.tsx ~ line 39 ~ constgetStaticProps:GetStaticProps= ~ error.response",
					error.response.headers
				);
			} else if (error.request) {
				// The request was made but no response was received
				// `error.request` is an instance of XMLHttpRequest in the
				// browser and an instance of
				// http.ClientRequest in node.js
				console.log(
					"ðŸš€ ~ file: index.tsx ~ line 45 ~ constgetStaticProps:GetStaticProps= ~ error.request",
					error.request
				);
			}
			throw error;
		}
		// check if instance of error not throw string but => throw new Error("")
		if (error instanceof Error) {
			throw error;
		}

		// error is string
		throw new Error(error as string);
	}
};

export default HomePage;
